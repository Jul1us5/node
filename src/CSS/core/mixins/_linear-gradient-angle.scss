// ----------------------------------------------------------------------

  // Linear Gradient angle

// ----------------------------------------------------------------------

 // example: @include linear-gradient(-10deg, #cccccc, #333333);

@mixin linear-gradient($angle, $colorStart, $colorStop){
    background: #{$colorStart}; /* Old browsers */
    background:    -moz-linear-gradient($angle,  #{$colorStart} 0%, #{$colorStop} 100%); /* FF3.6+ */
    background:        -webkit-gradient(linear, left bottom, right top, color-stop(0%,#{$colorStart}), color-stop(100%,#{$colorStop})); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient($angle,  #{$colorStart} 0%,#{$colorStop} 100%); /* Chrome10+,Safari5.1+ */
    background:      -o-linear-gradient($angle,  #{$colorStart} 0%,#{$colorStop} 100%); /* Opera 11.10+ */
    background:     -ms-linear-gradient($angle,  #{$colorStart} 0%,#{$colorStop} 100%); /* IE10+ */
    background:         linear-gradient($angle,  #{$colorStart} 0%,#{$colorStop} 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$colorStart}', endColorstr='#{$colorStop}',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
}


// example: @include linear-gradient-angle("to top", #cccccc, #333333);

@mixin linear-gradient-angle($angle, $color-stops...) {
$_angle-with-vendor-prefix: "";
$_angle: "";
@if $angle == "to top" or $angle == "bottom" {
$_angle-with-vendor-prefix: bottom;
$_angle: to top;
} @else if $angle == "to right" or $angle == "left" {
$_angle-with-vendor-prefix: left;
$_angle: to right;
} @else if $angle == "to bottom" or $angle == "top" {
$_angle-with-vendor-prefix: top;
$_angle: to bottom;
} @else if $angle == "to left" or $angle == "right" {
$_angle-with-vendor-prefix: right;
$_angle: to left;
} @else if $angle == "to top right" or $angle == "bottom left" {
$_angle-with-vendor-prefix: bottom left;
$_angle: to top right;
} @else if $angle == "to bottom right" or $angle == "top left" {
$_angle-with-vendor-prefix: top left;
$_angle: to bottom right;
} @else if $angle == "to bottom left" or $angle == "top right" {
$_angle-with-vendor-prefix: top right;
$_angle: to bottom left;
} @else if $angle == "to top left" or $angle == "bottom right" {
$_angle-with-vendor-prefix: bottom right;
$_angle: to top left;
} @else {
$_angle-with-vendor-prefix: $angle % 360;
$_angle: (90 - $angle) % 360;
}
background: -webkit-linear-gradient($_angle-with-vendor-prefix, $color-stops);
background: -moz-linear-gradient($_angle-with-vendor-prefix, $color-stops);
background: -o-linear-gradient($_angle-with-vendor-prefix, $color-stops);
background: -ms-linear-gradient($_angle-with-vendor-prefix, $color-stops);
background: linear-gradient($_angle, $color-stops);
}


@mixin linear-gradient-lr($start-colour, $end-colour) {
    background-color: $start-colour;
    background-image: -webkit-gradient(linear, left top, right top, from($start-colour), to($end-colour));
    background-image: -webkit-linear-gradient(left, $start-colour, $end-colour);
    background-image:    -moz-linear-gradient(left, $start-colour, $end-colour);
    background-image:     -ms-linear-gradient(left, $start-colour, $end-colour);
    background-image:      -o-linear-gradient(left, $start-colour, $end-colour);
    background-image:         linear-gradient(left, $start-colour, $end-colour);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-colour}', endColorstr='#{$end-colour}',GradientType=1 );
}

@mixin linear-gradient-tb($start-colour, $end-colour) {
    background-color: $start-colour;
    background-image: -webkit-gradient(linear, left top, left bottom, from($start-colour), to($end-colour));
    background-image: -webkit-linear-gradient(top, $start-colour, $end-colour);
    background-image:    -moz-linear-gradient(top, $start-colour, $end-colour);
    background-image:     -ms-linear-gradient(top, $start-colour, $end-colour);
    background-image:      -o-linear-gradient(top, $start-colour, $end-colour);
    background-image:         linear-gradient(top, $start-colour, $end-colour);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$start-colour}', endColorstr='#{$end-colour}');
}